---
import { formatDateToYYYYMMDD } from '../utils/date-utils'
import { Icon } from 'astro-icon/components'
import { i18n } from '../i18n/translation'
import I18nKey from '../i18n/i18nKey'
import { url } from '../utils/url-utils'

interface Props {
  class: string
  published: Date
  tags: string[]
  category: string
  hideTagsForMobile?: boolean
}
const { published, tags, category, hideTagsForMobile = false } = Astro.props
const className = Astro.props.class
---

<div class:list={["flex flex-wrap text-neutral-500 dark:text-neutral-400 items-center gap-3 text-sm", className]}>
    <!-- publish date -->
    <span class="text-50 font-medium">{formatDateToYYYYMMDD(published)}</span>
    
    <span class="text-30">•</span>

    <!-- categories -->
    <a href={url(`/archive/category/${category || 'uncategorized'}/`)} aria-label=`View all posts in the ${category} category`
       class="transition text-50 font-medium hover:text-[var(--primary)] dark:hover:text-[var(--primary)]">
        {category || i18n(I18nKey.uncategorized)}
    </a>

    <!-- tags (show only first 2) -->
    {(tags && tags.length > 0) && (
        <>
            <span class="text-30">•</span>
            {tags.slice(0, 2).map((tag, i) => (
                <>
                    {i > 0 && <span class="text-30">,</span>}
                    <a href={url(`/archive/tag/${tag}/`)} aria-label=`View all posts with the ${tag} tag`
                       class="transition text-50 font-medium hover:text-[var(--primary)] dark:hover:text-[var(--primary)]">
                        {tag}
                    </a>
                </>
            ))}
        </>
    )}
</div>

<style>
@tailwind components;

@layer components {
    .meta-icon {
        @apply w-8 h-8 transition rounded-md flex items-center justify-center bg-[var(--btn-regular-bg)]
        text-[var(--btn-content)] mr-2
    }
    .with-divider {
        @apply before:content-['/'] before:ml-1.5 before:mr-1.5 before:text-[var(--meta-divider)] before:text-sm
        before:font-medium before:first-of-type:hidden before:transition
    }
}
</style>