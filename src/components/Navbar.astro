---
import { Icon } from 'astro-icon/components'

import { LinkPreset, type NavBarLink } from '../types/config'
import { navBarConfig, siteConfig } from '../config'
import NavMenuPanel from './widget/NavMenuPanel.astro'
import Search from './Search.svelte'
import { LinkPresets } from '../constants/link-presets'
import LightDarkSwitch from './LightDarkSwitch.svelte'
import CategoriesDropdown from './widget/CategoriesDropdown.astro'
import { url } from '../utils/url-utils'
const className = Astro.props.class

let links: NavBarLink[] = navBarConfig.links.map(
  (item: NavBarLink | LinkPreset): NavBarLink => {
    if (typeof item === 'number') {
      return LinkPresets[item]
    }
    return item
  },
)
---
<div id="navbar" class="z-50 onload-animation">
    <div class="absolute h-8 left-0 right-0 -top-8 bg-[var(--card-bg)] transition"></div> <!-- used for onload animation -->
    <div class:list={[
        className,
        "card-base overflow-visible max-w-[var(--page-width)] h-[4.5rem] rounded-t-none mx-auto flex items-center justify-between px-4"]}>
        <div class="flex items-center gap-2">
            <a href={url('/')} class="btn-plain scale-animation rounded-lg h-[3.25rem] px-3 font-bold active:scale-95">
                <img src="/src/assets/images/drroot.png" alt="Profile" class="w-8 h-8 rounded-full object-cover" />
            </a>
            <div class="hidden md:flex items-center">
                <CategoriesDropdown />
                <a href={url('/about/')} class="btn-plain scale-animation rounded-lg h-11 font-bold px-5 active:scale-95">
                    About
                </a>
            </div>
        </div>
        <div class="flex items-center gap-1">
            <!-- Social Icons -->
            <div class="hidden md:flex items-center gap-1 mr-2">
                <a href="https://X.com/CybrAvnish" target="_blank" rel="noopener" aria-label="Twitter" 
                   class="btn-plain scale-animation rounded-lg h-9 w-9 active:scale-90">
                    <Icon name="fa6-brands:twitter" class="text-[1rem]" />
                </a>
                <a href="https://linkedin.com/in/cybravnish/" target="_blank" rel="noopener" aria-label="LinkedIn" 
                   class="btn-plain scale-animation rounded-lg h-9 w-9 active:scale-90">
                    <Icon name="fa6-brands:linkedin" class="text-[1rem]" />
                </a>
                <a href="https://github.com/CybrAvnish" target="_blank" rel="noopener" aria-label="GitHub" 
                   class="btn-plain scale-animation rounded-lg h-9 w-9 active:scale-90">
                    <Icon name="fa6-brands:github" class="text-[1rem]" />
                </a>
            </div>
            
            <Search client:load>
                <Icon slot="search-icon" name="material-symbols:search" class="absolute text-[1.25rem] pointer-events-none ml-3 transition my-auto text-black/30 dark:text-white/30"></Icon>
                <Icon slot="arrow-icon" name="fa6-solid:chevron-right" class="transition text=[0.75rem] translate-x-0.5 my-auto text-[var(--primary)]"></Icon>
                <Icon slot="search-switch" name="material-symbols:search" class="text-[1.25rem]"></Icon>
            </Search>

            <LightDarkSwitch client:load></LightDarkSwitch>
            <button aria-label="Menu" name="Nav Menu" class="btn-plain scale-animation rounded-lg w-11 h-11 active:scale-90 md:hidden" id="nav-menu-switch">
                <Icon name="material-symbols:menu-rounded" class="text-[1.25rem]"></Icon>
            </button>
        </div>
        <NavMenuPanel links={links}></NavMenuPanel>

    </div>
</div>

<style lang="stylus">
</style>

<script>

function switchTheme() {
    if (localStorage.theme === 'dark') {
        document.documentElement.classList.remove('dark');
        localStorage.theme = 'light';
    } else {
        document.documentElement.classList.add('dark');
        localStorage.theme = 'dark';
    }
}

function loadButtonScript() {
    let switchBtn = document.getElementById("scheme-switch");
    if (switchBtn) {
        switchBtn.addEventListener("click", function () {
            switchTheme()
        });
    }



    let menuBtn = document.getElementById("nav-menu-switch");
    if (menuBtn) {
        menuBtn.addEventListener("click", function () {
            let menuPanel = document.getElementById("nav-menu-panel");
            if (menuPanel) {
                menuPanel.classList.toggle("float-panel-closed");
            }
        });
    }
}

loadButtonScript();

document.addEventListener('astro:after-swap', () => {
    loadButtonScript();
}, { once: false });
</script>

{import.meta.env.PROD && <script is:inline define:vars={{scriptUrl: url('/pagefind/pagefind.js')}}>
async function loadPagefind() {
    const pagefind = await import(scriptUrl)
    await pagefind.options({
        'excerptLength': 20
    })
    pagefind.init()
    window.pagefind = pagefind
    pagefind.search('')     // speed up the first search
}
loadPagefind()
</script>}
